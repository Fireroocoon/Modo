name: Deploy to EC2

on:
  push:
    branches: [ "master" ]  # master 브랜치에 push가 발생하면 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

#      - name: Install Java on EC2
#        uses: appleboy/ssh-action@master
#        with:
#          host: ec2-13-124-59-140.ap-northeast-2.compute.amazonaws.com
#          username: ${{ secrets.EC2_USERNAME }}
#          key: ${{ secrets.EC2_SSH_KEY }}
#          script: |
#            # Java가 설치되어 있는지 확인
#            if ! command -v java &> /dev/null; then
#              echo "Installing Java 17..."
#              sudo apt-get update
#              sudo apt-get install -y openjdk-17-jdk
#            fi
#            java -version

      - name: Create deploy script
        uses: appleboy/ssh-action@master
        with:
          host: ec2-13-124-59-140.ap-northeast-2.compute.amazonaws.com
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cat > ~/deploy.sh << 'EOL'
            #!/bin/bash
            set -e

            APP_DIR=~/app
            cd $APP_DIR

            # Java 설치 확인
            if ! command -v java &> /dev/null; then
              echo "Error: Java is not installed"
              exit 1
            fi

            # 이전 프로세스 종료
            if pgrep -f '.jar' > /dev/null; then
              echo "Stopping existing application..."
              pkill -f '.jar'
              sleep 3
            fi

            # JAR 파일 선택
            JAR_FILE=$(ls -1 *SNAPSHOT.jar | grep -v plain || ls -1 *.jar)
            echo "Selected JAR file: $JAR_FILE"

            # 실행 권한 부여
            chmod +x "$JAR_FILE"

            # 로그 파일 초기화
            echo "" > app.log

            # 애플리케이션 실행 (서버 주소와 포트 설정 추가)
            echo "Starting application: $JAR_FILE"
            nohup java -jar "$JAR_FILE" \
              --server.address=0.0.0.0 \
              --server.port=8080 \
              > app.log 2>&1 &

            # PID 저장
            echo $! > app.pid
            echo "Application started with PID: $(cat app.pid)"

#             # Spring 애플리케이션 시작 로그 확인
#             echo "Waiting for Spring application to start..."
#             timeout 60 tail -f app.log | while read line; do
#               echo "$line"
#               if [[ "$line" == *"Started"* && "$line" == *"in"*"seconds"* ]]; then
#                 pkill -P $$ tail
#                 exit 0
#               fi
#             done

            # 프로세스 실행 확인
            if ! ps -p $(cat app.pid) > /dev/null; then
              echo "Application failed to start. Full logs:"
              cat app.log
              exit 1
            fi

            # 포트 리스닝 확인
            if ! netstat -tulpn 2>/dev/null | grep -q ":8080 "; then
              echo "Warning: Application is not listening on port 8080"
              echo "Netstat output:"
              netstat -tulpn 2>/dev/null | grep 'java'
            else
              echo "Application is successfully listening on port 8080"
            fi

            echo "Application started successfully!"
            EOL
            chmod +x ~/deploy.sh

      - name: Setup Remote Directory
        uses: appleboy/ssh-action@master
        with:
          host: ec2-13-124-59-140.ap-northeast-2.compute.amazonaws.com
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            mkdir -p ~/app
            chmod 755 ~/app

      - name: Copy JAR file via SSH
        uses: appleboy/scp-action@master
        with:
          host: ec2-13-124-59-140.ap-northeast-2.compute.amazonaws.com
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build/libs/*.jar"
          target: "~/app"
          strip_components: 2
          debug: true

      - name: Execute deploy script
        uses: appleboy/ssh-action@master
        with:
          host: ec2-13-124-59-140.ap-northeast-2.compute.amazonaws.com
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          command_timeout: "20m"
          script: |
            ~/deploy.sh 

